name: CI/CD

on:
  push:
    branches: [ "main" ]

jobs:
  frontend-lint:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    name: Lint (Frond)
    steps:
    -
      name: Checkout
      uses: actions/checkout@v3
    - 
      name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '16.x'
    - 
      name: Init git
      working-directory: ./front
      run: git init
    - 
      name: Install modules
      working-directory: ./front
      run: yarn
    - 
      name: Run ESLint
      working-directory: ./front
      run: yarn lint:check 
  backend-lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: [ 1.19 ]
        os: [ macos-latest ]
    name: Lint (Back)
    steps:
    - 
      name: Checkout
      uses: actions/checkout@v3
    - 
      name: Setup GO
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go }}
        cache: false
    - 
      name: golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        working-directory: back
        args: --issues-exit-code=0
        skip-cache: true
        skip-pkg-cache: true
        skip-build-cache: true


  frontend-build:
    needs: 
      - frontend-lint
    runs-on: ubuntu-latest
    name: Build (Front)
    steps:
    -
      name: Checkout
      uses: actions/checkout@v3
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    -
      name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: ./front
        dockerfile: Dockerfile
        push: false
  backend-build:
    needs: 
      - backend-lint
    runs-on: ubuntu-latest
    name: Build (Back)
    steps:
    -
      name: Checkout
      uses: actions/checkout@v3
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    -
      name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: ./back
        dockerfile: Dockerfile
        push: false

  deploy:
    runs-on: ubuntu-latest
    needs: 
      - frontend-build
      - backend-build
    name: Deploy
    steps:
    - 
      name: Deploy using ssh
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: 22
        script: |
          cd /var/www/vpasport/glossary
          git pull origin main
          git status
          docker-compose down -v 
          docker-compose up --build -d